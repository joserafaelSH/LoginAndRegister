{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Desktop/teste/teste01/client/src/App.js\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport './App.css';\nimport Axios from \"axios\";\nimport { Component } from \"react\";\nimport { Button } from \"./components/button/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      login: \"\",\n      password: \"\",\n      confirmpassword: \"\"\n    };\n\n    this.handleClickLogin = values => {\n      Axios.post(\"http://localhost:3003/login\", {\n        email: values.email,\n        password: values.password\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.status) {\n          alert(\"Usario logado, seu registro consta na base de dados\");\n        } else {\n          alert(\"Senha ou login invalido\");\n        }\n      });\n    };\n\n    this.handleClickRegister = values => {\n      Axios.post(\"http://localhost:3003/register\", {\n        email: values.email,\n        password: values.password\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.status) {\n          alert(\"Usario registrado com sucesso\");\n        } else {\n          alert(\"Usuario ja consta na base de dados\");\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      login,\n      password,\n      confirmpassword\n    } = this.state;\n    const validationLogin = yup.object().shape({\n      email: yup.string().email(\"Email invalido\").required(),\n      password: yup.string().required().min(8, \"A senha deve ter ao menos 8 caracteres\")\n    });\n    const validationRegister = yup.object().shape({\n      email: yup.string().email(\"Email invalido\").required(),\n      password: yup.string().required().min(8, \"A senha deve ter ao menos 8 caracteres\"),\n      confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null], \"As senhas nao sao iguais\")\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {},\n          onSubmit: this.handleClickLogin,\n          validationSchema: validationLogin,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                clasName: \"form-field\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"span\",\n                name: \"email\",\n                className: \"form-error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                clasName: \"form-field\",\n                placeholder: \"Senha\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"span\",\n                name: \"password\",\n                className: \"form-error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {},\n          onSubmit: this.handleClickRegister,\n          validationSchema: validationRegister,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                clasName: \"form-field\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"span\",\n                name: \"email\",\n                className: \"form-error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                clasName: \"form-field\",\n                placeholder: \"Senha\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"span\",\n                name: \"password\",\n                className: \"form-error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"confirmPassword\",\n                clasName: \"form-field\",\n                placeholder: \"Confirme sua Senha\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"span\",\n                name: \"confirmPassword\",\n                className: \"form-error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rafa/Desktop/teste/teste01/client/src/App.js"],"names":["Formik","Form","Field","ErrorMessage","yup","Axios","Component","Button","App","state","login","password","confirmpassword","handleClickLogin","values","post","email","then","response","console","log","data","status","alert","handleClickRegister","render","validationLogin","object","shape","string","required","min","validationRegister","confirmPassword","oneOf","ref"],"mappings":"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","sourcesContent":["import {Formik, Form, Field, ErrorMessage} from \"formik\" ;\nimport * as yup from \"yup\";\nimport './App.css';\nimport Axios from \"axios\" ;\nimport { Component } from \"react\";\nimport { Button } from \"./components/button/index\";\n\nclass App extends Component {\n\n  state = {\n    login:\"\",\n    password:\"\",\n    confirmpassword:\"\"\n  }\n\n  \n\n  handleClickLogin = (values) => {\n    Axios.post(\"http://localhost:3003/login\",{email:values.email, password:values.password}).\n    then((response)=>{\n      console.log(response);\n      if(response.data.status){\n        alert(\"Usario logado, seu registro consta na base de dados\");\n      \n      }else{\n        alert(\"Senha ou login invalido\");\n      }\n    })\n  };\n\n  handleClickRegister = (values) => {\n    Axios.post(\"http://localhost:3003/register\", {email:values.email, password:values.password})\n    .then((response) => {\n      console.log(response);\n      if(response.data.status){\n        alert(\"Usario registrado com sucesso\");\n      }else{\n        alert(\"Usuario ja consta na base de dados\");\n      }\n    })\n  };\n\n  \n  \n\n  render(){\n\n    const {login, password, confirmpassword} = this.state ;\n\n    const validationLogin =  yup.object().shape({\n      email: yup.string().email(\"Email invalido\").required(),\n      password: yup.string().required().min(8,\"A senha deve ter ao menos 8 caracteres\"),\n    })\n  \n    const validationRegister = yup.object().shape({\n      email: yup.string().email(\"Email invalido\").required(),\n      password: yup.string().required().min(8,\"A senha deve ter ao menos 8 caracteres\"),\n      confirmPassword: yup.string().oneOf([yup.ref(\"password\"),null], \"As senhas nao sao iguais\")\n    })\n    return (\n      <div className=\"container\">\n        <div className=\"login\">\n          <h1>Login</h1>\n          <Formik\n            initialValues={{}}\n            onSubmit ={this.handleClickLogin}\n            validationSchema = {validationLogin}\n          >\n            <Form className=\"login-form\">\n            \n              <div className=\"login-form-group\"> \n                <Field name=\"email\" clasName =\"form-field\" placeholder=\"Email\"></Field>\n                <ErrorMessage component={\"span\"} name=\"email\" className=\"form-error\"></ErrorMessage>\n              </div>\n            \n              <div className=\"login-form-group\"> \n                <Field name=\"password\" clasName =\"form-field\" placeholder=\"Senha\" type=\"password\"></Field>\n                <ErrorMessage component={\"span\"} name=\"password\" className=\"form-error\"></ErrorMessage>\n              </div>\n\n              <Button/>\n              \n    \n            </Form>\n    \n          </Formik>\n        </div>\n  \n        <div className=\"register\">\n          <h1>Register</h1>\n          <Formik\n            initialValues={{}}\n            onSubmit ={this.handleClickRegister}\n            validationSchema = {validationRegister}\n          >\n            <Form className=\"login-form\">\n            \n              <div className=\"login-form-group\"> \n                <Field name=\"email\" clasName =\"form-field\" placeholder=\"Email\">{}</Field>\n                <ErrorMessage component={\"span\"} name=\"email\" className=\"form-error\"></ErrorMessage>\n              </div>\n            \n              <div className=\"login-form-group\"> \n                <Field name=\"password\" clasName =\"form-field\" placeholder=\"Senha\" type=\"password\" ></Field>\n                <ErrorMessage component={\"span\"} name=\"password\" className=\"form-error\"></ErrorMessage>\n              </div>\n    \n              <div className=\"login-form-group\"> \n                <Field name=\"confirmPassword\" clasName =\"form-field\" placeholder=\"Confirme sua Senha\"  type=\"password\"></Field>\n                <ErrorMessage component={\"span\"} name=\"confirmPassword\" className=\"form-error\"></ErrorMessage>\n              </div>\n    \n              <button className=\"button\" type=\"submit\">Register</button>\n    \n            </Form>\n          </Formik>\n  \n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}